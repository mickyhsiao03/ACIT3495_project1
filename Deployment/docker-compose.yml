version: '3.3' 
services:
  mysql-db: 
    image: mysql:latest
    restart: always
    container_name: mysql-db
    networks:
      - appnetwork
    environment: 
      MYSQL_DATABASE: 'acit3495' 
      # So you don't have to use root, but you can if you like 
      MYSQL_USER: 'user' 
      # You can use whatever password you like 
      MYSQL_PASSWORD: '2705895a' 
      # Password for root access 
      MYSQL_ROOT_PASSWORD: '2705895a'
    ports: 
      # <Port exposed> : < MySQL Port running inside container> 
      - '3306:3306' 
    expose: 
      # Opens port 3306 on the container 
      - '3306' 
      # Where our data will be persisted 
    volumes: 
      - mysql-data:/var/lib/mysql
  mongo-db: 
    image: mongo:latest
    restart: always
    container_name: mongo-db
    networks:
      - appnetwork
    ports: 
      # <Port exposed> : < MySQL Port running inside container> 
      - '27017:27017' 
    expose: 
      # Opens port 3306 on the container 
      - '27017' 
      # Where our data will be persisted 
    volumes: 
      - mongo-data:/data/db
  analytics:
    image: analytics
    restart: always
    container_name: analytics
    networks:
      - appnetwork
    ports:
      - "8090:8090"
    depends_on:
      - "mysql-db"
      - "mongo-db"
  auth:
    image: auth
    restart: always
    container_name: auth
    networks:
      - appnetwork
    ports:
      - "8080:8080"
    depends_on:
      - "enter"
      - "show"
  enter:
    image: enter
    restart: always
    container_name: enter
    networks:
      - appnetwork
    ports:
      - "8100:8100"
    depends_on:
      - "mysql-db"
  show:
    image: show
    restart: always
    container_name: show
    networks:
      - appnetwork
    ports:
      - "8200:8200"
    depends_on:
      - "mongo-db"
# Names our volume 
volumes: 
  mysql-data:
  mongo-data:
networks:
  appnetwork:
    driver: bridge